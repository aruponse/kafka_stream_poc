spring:
  application:
    name: kafka-stream-poc
  
  # H2 Database Configuration
  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: 
    
  h2:
    console:
      enabled: true
      path: /h2-console
      
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  # Kafka Configuration with JSON Support
  kafka:
    bootstrap-servers: localhost:9092
    
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    
    consumer:
      group-id: kafka-stream-poc-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        "[spring.json.trusted.packages]": "com.example.kafkastream.dto"
    
    streams:
      application-id: kafka-streams-poc-app
      bootstrap-servers: localhost:9092
      properties:
        "[default.key.serde]": org.apache.kafka.common.serialization.Serdes$StringSerde
        "[default.value.serde]": org.apache.kafka.common.serialization.Serdes$StringSerde
        "[commit.interval.ms]": 1000
        "[cache.max.bytes.buffering]": 0
        "[default.deserialization.exception.handler]": org.apache.kafka.streams.errors.LogAndContinueExceptionHandler

# Custom Topic Configuration
app:
  kafka:
    topics:
      input-topic: input-topic
      legacy-events-topic: legacy-events-topic
      actions-topic: actions-topic
      output-topic-transformed: output-topic-transformed
      output-topic-json-converted: output-topic-json-converted
      output-topic-action-a: output-topic-action-a
      output-topic-action-b: output-topic-action-b
      inbound-message-topic: inbound-message-topic
      create-chat-topic: create-chat-topic
      create-message-topic: create-message-topic

server:
  port: 8082

logging:
  level:
    root: INFO
    "[org.apache.kafka]": DEBUG
    "[org.springframework.kafka]": DEBUG
    "[com.example.kafkastream]": DEBUG
    '[org.apache.kafka.streams]': DEBUG